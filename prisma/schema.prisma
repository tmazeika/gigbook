generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id") @db.VarChar(255)
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type") @db.VarChar(255)
  providerId         String    @map("provider_id") @db.VarChar(255)
  providerAccountId  String    @map("provider_account_id") @db.VarChar(255)
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token") @db.VarChar(255)
  accessToken  String   @unique @map("access_token") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  address        Json?     @db.Json
  clockifyApiKey String?   @db.VarChar(255)
  email          String?   @unique @db.VarChar(255)
  emailVerified  DateTime? @map("email_verified")
  image          String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @default(now()) @map("updated_at")

  accounts Account[]
  sessions Session[]
  clients  Client[]
  banks    Bank[]

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(255)
  token      String   @unique @db.VarChar(255)
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@unique([identifier, token])
  @@map("verification_requests")
}

model Client {
  id               Int      @id @default(autoincrement())
  userId           Int      @map("user_id")
  clockifyId       String   @map("clockify_id") @db.VarChar(255)
  address          Json?    @db.Json
  billingIncrement Int      @map("billing_increments")
  billingNetDays   Int      @map("billing_net_days")
  billingCurrency  String   @map("billing_currency") @db.VarChar(3)
  bankId           Int?     @map("bank_id")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")

  user User  @relation(fields: [userId], references: [id])
  bank Bank? @relation(fields: [bankId], references: [id])

  @@unique([userId, clockifyId])
  @@map("clients")
}

model Bank {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  nickname  String?  @db.VarChar(255)
  currency  String   @db.VarChar(3)
  details   Json     @db.Json
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  user    User     @relation(fields: [userId], references: [id])
  clients Client[]

  @@unique([userId, nickname])
  @@map("banks")
}
