generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?
  clockifyApiKey String?   @map("clockify_api_key")
  email          String?   @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @default(now()) @map("updated_at")

  accounts Account[]
  sessions Session[]
  invoices Invoice[]
  //  clients          Client[]
  //  banks            Bank[]
  //  invoiceTemplates InvoiceTemplate[]

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@unique([identifier, token])
  @@map("verification_requests")
}

//model Client {
//  id               Int      @id @default(autoincrement())
//  userId           Int      @map("user_id")
//  clockifyId       String   @map("clockify_id") @db.VarChar(255)
//  address          Json?    @db.Json
//  billingIncrement Int      @map("billing_increments")
//  billingNetDays   Int      @map("billing_net_days")
//  billingCurrency  String   @map("billing_currency") @db.VarChar(3)
//  bankId           Int?     @map("bank_id")
//  createdAt        DateTime @default(now()) @map("created_at")
//  updatedAt        DateTime @default(now()) @map("updated_at")
//
//  user User  @relation(fields: [userId], references: [id])
//  bank Bank? @relation(fields: [bankId], references: [id])
//
//  @@unique([userId, clockifyId])
//  @@map("clients")
//}
//
//model Bank {
//  id        Int      @id @default(autoincrement())
//  userId    Int      @map("user_id")
//  nickname  String?  @db.VarChar(255)
//  currency  String   @db.Char(3)
//  details   Json     @db.Json
//  createdAt DateTime @default(now()) @map("created_at")
//  updatedAt DateTime @default(now()) @map("updated_at")
//
//  user    User     @relation(fields: [userId], references: [id])
//  clients Client[]
//
//  @@unique([userId, nickname])
//  @@map("banks")
//}
//
//model InvoiceTemplate {
//  id        Int      @id @default(autoincrement())
//  userId    Int?     @map("user_id")
//  private   Boolean  @default(true)
//  html      String
//  css       String?
//  createdAt DateTime @default(now()) @map("created_at")
//  updatedAt DateTime @default(now()) @map("updated_at")
//
//  user User? @relation(fields: [userId], references: [id])
//
//  @@index([userId])
//  @@map("invoice_templates")
//}

model Invoice {
  id               Int      @id @default(autoincrement())
  userId           Int      @map("user_id")
  reference        String
  date             DateTime
  periodStart      DateTime @map("period_start")
  periodEnd        DateTime @map("period_end")
  payeeName        String   @map("payee_name")
  payeeDescription String   @map("payee_description")
  payeeAddress     String   @map("payee_address")
  clientName       String   @map("client_name")
  clientAddress    String   @map("client_address")
  clientCurrency   String   @map("client_currency")
  billingIncrement Int      @map("billing_increment")
  billingNetTerms  Int      @map("billing_net_terms")
  billingCurrency  String   @map("billing_currency")
  exchangeRate     Decimal  @default(1) @map("exchange_rate")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")

  user      User              @relation(fields: [userId], references: [id])
  lineItems InvoiceLineItem[]

  @@index([userId])
  @@map("invoices")
}

model InvoiceLineItem {
  id        Int    @id @default(autoincrement())
  invoiceId Int    @map("invoice_id")
  project   String
  task      String
  rateN     Int    @map("rate_n")
  rateD     Int    @map("rate_d")
  duration  String

  invoice Invoice @relation(fields: [invoiceId], references: [id])

  @@index([invoiceId])
  @@map("invoice_line_items")
}
